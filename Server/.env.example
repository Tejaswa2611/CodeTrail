# CodeTrail Server Environment Configuration
# Copy this file to .env and fill in your actual values

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
# PostgreSQL database connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://username:password@localhost:5432/codetrail"

# ==============================================
# SERVER CONFIGURATION
# ==============================================
# Port number for the server to listen on
PORT=3001

# Environment mode (development, production, test)
NODE_ENV=development

# Base URL for the server (used for CORS and API references)
SERVER_URL=http://localhost:3001

# ==============================================
# CORS CONFIGURATION
# ==============================================
# Frontend URL for CORS policy
CORS_ORIGIN=http://localhost:8080

# ==============================================
# JWT AUTHENTICATION
# ==============================================
# Secret key for JWT token signing (use a long, random string)
JWT_SECRET=your-super-secret-jwt-key-here-make-it-long-and-random

# Secret key for JWT refresh token signing (use a different long, random string)
JWT_REFRESH_SECRET=your-super-secret-refresh-key-here-also-long-and-random

# JWT token expiration time (e.g., 15m, 1h, 1d)
JWT_EXPIRES_IN=15m

# JWT refresh token expiration time (e.g., 7d, 30d)
JWT_REFRESH_EXPIRES_IN=7d

# ==============================================
# SECURITY CONFIGURATION
# ==============================================
# Number of bcrypt rounds for password hashing (10-12 recommended)
BCRYPT_ROUNDS=12

# ==============================================
# RATE LIMITING
# ==============================================
# Time window for rate limiting in milliseconds (15 minutes = 900000)
RATE_LIMIT_WINDOW_MS=900000

# Maximum number of requests per window
RATE_LIMIT_MAX_REQUESTS=100

# ==============================================
# AI CONFIGURATION
# ==============================================
# OpenRouter API key for AI chatbot functionality
# Get your key from: https://openrouter.ai/
OPENROUTER_API_KEY=your-openrouter-api-key-here

# ==============================================
# REDIS CONFIGURATION (for caching)
# ==============================================
# Option 1: Redis URL (recommended)
# For local Redis: redis://localhost:6379
# For Redis with auth: redis://username:password@host:port
REDIS_URL=redis://localhost:6379

# Option 2: Individual Redis settings (alternative to REDIS_URL)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0

# Optional Redis tuning (defaults are provided)
# REDIS_RETRY_DELAY_ON_FAILOVER=100
# REDIS_MAX_RETRIES_PER_REQUEST=3

# ==============================================
# DEVELOPMENT NOTES
# ==============================================
# 1. Never commit your actual .env file to version control
# 2. Generate strong, unique secrets for JWT keys
# 3. Use environment-specific values for different deployments
# 4. Ensure Redis is running before starting the server
# 5. Update CORS_ORIGIN to match your frontend URL
